<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_ethsign.crypto</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>https://unpkg.com/window-crypto@1.1.0/index.js</description>
        <name>crypto</name>
        <script><![CDATA[(function () {
    'use strict';
    function _0x1bdeeb(_0x5e39c0, _0x119ff0) {
        return _0x119ff0 = { 'exports': {} }, _0x5e39c0(_0x119ff0, _0x119ff0['exports']), _0x119ff0['exports'];
    }
    var _0x38e02e = _0x1bdeeb(function (_0x28e055) {
        var _0x4d5946 = function (_0xc50dd6, _0x4c474f, _0x56e5b5) {
            if (typeof _0x56e5b5 === 'undefined') {
                _0x56e5b5 = 0x0;
            }
            if (!(_0xc50dd6 instanceof Uint8Array) || _0xc50dd6['length'] !== 0x20) {
                throw new Error('Key\x20should\x20be\x2032\x20byte\x20array!');
            }
            if (!(_0x4c474f instanceof Uint8Array) || _0x4c474f['length'] !== 0xc) {
                throw new Error('Nonce\x20should\x20be\x2012\x20byte\x20array!');
            }
            this['_rounds'] = 0x14;
            this['_sigma'] = [
                0x61707865,
                0x3320646e,
                0x79622d32,
                0x6b206574
            ];
            this['_param'] = [
                this['_sigma'][0x0],
                this['_sigma'][0x1],
                this['_sigma'][0x2],
                this['_sigma'][0x3],
                this['_get32'](_0xc50dd6, 0x0),
                this['_get32'](_0xc50dd6, 0x4),
                this['_get32'](_0xc50dd6, 0x8),
                this['_get32'](_0xc50dd6, 0xc),
                this['_get32'](_0xc50dd6, 0x10),
                this['_get32'](_0xc50dd6, 0x14),
                this['_get32'](_0xc50dd6, 0x18),
                this['_get32'](_0xc50dd6, 0x1c),
                _0x56e5b5,
                this['_get32'](_0x4c474f, 0x0),
                this['_get32'](_0x4c474f, 0x4),
                this['_get32'](_0x4c474f, 0x8)
            ];
            this['_keystream'] = [
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0
            ];
            this['_byteCounter'] = 0x0;
        };
        _0x4d5946['prototype']['_chacha'] = function () {
            var _0x554ac3 = [
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0
            ];
            var _0x5a7594 = 0x0;
            var _0x46d27d = 0x0;
            for (_0x5a7594 = 0x0; _0x5a7594 < 0x10; _0x5a7594++) {
                _0x554ac3[_0x5a7594] = this['_param'][_0x5a7594];
            }
            for (_0x5a7594 = 0x0; _0x5a7594 < this['_rounds']; _0x5a7594 += 0x2) {
                this['_quarterround'](_0x554ac3, 0x0, 0x4, 0x8, 0xc);
                this['_quarterround'](_0x554ac3, 0x1, 0x5, 0x9, 0xd);
                this['_quarterround'](_0x554ac3, 0x2, 0x6, 0xa, 0xe);
                this['_quarterround'](_0x554ac3, 0x3, 0x7, 0xb, 0xf);
                this['_quarterround'](_0x554ac3, 0x0, 0x5, 0xa, 0xf);
                this['_quarterround'](_0x554ac3, 0x1, 0x6, 0xb, 0xc);
                this['_quarterround'](_0x554ac3, 0x2, 0x7, 0x8, 0xd);
                this['_quarterround'](_0x554ac3, 0x3, 0x4, 0x9, 0xe);
            }
            for (_0x5a7594 = 0x0; _0x5a7594 < 0x10; _0x5a7594++) {
                _0x554ac3[_0x5a7594] += this['_param'][_0x5a7594];
                this['_keystream'][_0x46d27d++] = _0x554ac3[_0x5a7594] & 0xff;
                this['_keystream'][_0x46d27d++] = _0x554ac3[_0x5a7594] >>> 0x8 & 0xff;
                this['_keystream'][_0x46d27d++] = _0x554ac3[_0x5a7594] >>> 0x10 & 0xff;
                this['_keystream'][_0x46d27d++] = _0x554ac3[_0x5a7594] >>> 0x18 & 0xff;
            }
        };
        _0x4d5946['prototype']['_quarterround'] = function (_0x4c9ff2, _0x5a1cc9, _0xfa6eb0, _0x2c0891, _0x552fa0) {
            _0x4c9ff2[_0x552fa0] = this['_rotl'](_0x4c9ff2[_0x552fa0] ^ (_0x4c9ff2[_0x5a1cc9] += _0x4c9ff2[_0xfa6eb0]), 0x10);
            _0x4c9ff2[_0xfa6eb0] = this['_rotl'](_0x4c9ff2[_0xfa6eb0] ^ (_0x4c9ff2[_0x2c0891] += _0x4c9ff2[_0x552fa0]), 0xc);
            _0x4c9ff2[_0x552fa0] = this['_rotl'](_0x4c9ff2[_0x552fa0] ^ (_0x4c9ff2[_0x5a1cc9] += _0x4c9ff2[_0xfa6eb0]), 0x8);
            _0x4c9ff2[_0xfa6eb0] = this['_rotl'](_0x4c9ff2[_0xfa6eb0] ^ (_0x4c9ff2[_0x2c0891] += _0x4c9ff2[_0x552fa0]), 0x7);
            _0x4c9ff2[_0x5a1cc9] >>>= 0x0;
            _0x4c9ff2[_0xfa6eb0] >>>= 0x0;
            _0x4c9ff2[_0x2c0891] >>>= 0x0;
            _0x4c9ff2[_0x552fa0] >>>= 0x0;
        };
        _0x4d5946['prototype']['_get32'] = function (_0x1fb1f4, _0x4c4454) {
            return _0x1fb1f4[_0x4c4454++] ^ _0x1fb1f4[_0x4c4454++] << 0x8 ^ _0x1fb1f4[_0x4c4454++] << 0x10 ^ _0x1fb1f4[_0x4c4454] << 0x18;
        };
        _0x4d5946['prototype']['_rotl'] = function (_0x48593b, _0x2eacb0) {
            return _0x48593b << _0x2eacb0 | _0x48593b >>> 0x20 - _0x2eacb0;
        };
        _0x4d5946['prototype']['encrypt'] = function (_0x34af08) {
            return this['_update'](_0x34af08);
        };
        _0x4d5946['prototype']['decrypt'] = function (_0x18b79d) {
            return this['_update'](_0x18b79d);
        };
        _0x4d5946['prototype']['_update'] = function (_0x43ac95) {
            if (!(_0x43ac95 instanceof Uint8Array) || _0x43ac95['length'] === 0x0) {
                throw new Error('Data\x20should\x20be\x20type\x20of\x20bytes\x20(Uint8Array)\x20and\x20not\x20empty!');
            }
            var _0x5d12a2 = new Uint8Array(_0x43ac95['length']);
            for (var _0x18ea01 = 0x0; _0x18ea01 < _0x43ac95['length']; _0x18ea01++) {
                if (this['_byteCounter'] === 0x0 || this['_byteCounter'] === 0x40) {
                    this['_chacha']();
                    this['_param'][0xc]++;
                    this['_byteCounter'] = 0x0;
                }
                _0x5d12a2[_0x18ea01] = _0x43ac95[_0x18ea01] ^ this['_keystream'][this['_byteCounter']++];
            }
            return _0x5d12a2;
        };
        if (_0x28e055['exports']) {
            _0x28e055['exports'] = _0x4d5946;
        }
    });
    if (typeof window['crypto'] == 'undefined') {
        var _0x3b6089 = _0x82c6ed();
        window['crypto'] = {
            getRandomValues: function (_0x3bac1f) {
                for (var _0x45ac52 = 0x0; _0x45ac52 < _0x3bac1f['length']; _0x45ac52++) {
                    _0x3bac1f[_0x45ac52] = _0x3b6089(_0x3bac1f['BYTES_PER_ELEMENT']);
                }
            }
        };
    }
    function _0x82c6ed() {
        function _0x4323d3(_0x2ba755) {
            var _0x383082 = new Uint8Array(_0x2ba755);
            for (var _0x4a82e8 = 0x0; _0x4a82e8 < _0x2ba755; _0x4a82e8++) {
                _0x383082[_0x4a82e8] = Math['round'](Math['random']() * 0x100);
            }
            return _0x383082;
        }
        var _0x5aeedf = _0x4323d3(0x20);
        var _0x407164 = _0x4323d3(0xc);
        var _0x555bff = 0x1;
        var _0x576b49 = new _0x38e02e(_0x5aeedf, _0x407164, _0x555bff);
        var _0x57a176 = new Uint8Array(Array(0x40)['fill'](0x1));
        var _0x1dbb65 = _0x57a176['length'];
        function _0x2df706() {
            if (_0x1dbb65 >= _0x57a176['length']) {
                _0x57a176 = _0x576b49['encrypt'](_0x57a176);
                _0x1dbb65 = 0x0;
            }
            return _0x57a176[_0x1dbb65++];
        }
        return function (_0x1edd75) {
            if (_0x1edd75 < 0x1 || _0x1edd75 > 0x10) {
                throw new Error('Invalid\x20size\x20argument:\x20' + _0x1edd75);
            }
            var _0x1ca356 = 0x0;
            while (_0x1edd75 > 0x0) {
                _0x1edd75--;
                _0x1ca356 = _0x1ca356 << 0x8 | _0x2df706();
            }
            return _0x1ca356;
        };
    }
}());]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-11-02 14:57:56</sys_created_on>
        <sys_id>8e91e268db142410969430d8689619c1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>crypto</sys_name>
        <sys_package display_value="EthSign" source="x_snc_ethsign">0997d36b1b04a01064bf11fc2d4bcbfd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="EthSign">0997d36b1b04a01064bf11fc2d4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_8e91e268db142410969430d8689619c1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-11-02 14:57:56</sys_updated_on>
    </sys_script_include>
</record_update>
